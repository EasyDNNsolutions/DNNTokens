
/****** Object:  Table {databaseOwner}[DNNTokens_Category]    Script Date: 5.2.2025. 13:41:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE {databaseOwner}[DNNTokens_Category](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[Name] [nvarchar](250) NOT NULL,
 CONSTRAINT [PK_DNNTokens_Category] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table {databaseOwner}[DNNTokens_GeneralPortalSettings]    Script Date: 5.2.2025. 13:41:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE {databaseOwner}[DNNTokens_GeneralPortalSettings](
	[PortalId] [int] NOT NULL,
	[RenderDNNTokens] [bit] NOT NULL,
	[ReplaceOnAllTabs] [bit] NOT NULL,
 CONSTRAINT [PK_DNNTokens_PortalSettings] PRIMARY KEY CLUSTERED 
(
	[PortalId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table {databaseOwner}[DNNTokens_PortalTabs]    Script Date: 5.2.2025. 13:41:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE {databaseOwner}[DNNTokens_PortalTabs](
	[PortalId] [int] NOT NULL,
	[TabId] [int] NOT NULL,
 CONSTRAINT [PK_DNNTokens_PortalTabs] PRIMARY KEY CLUSTERED 
(
	[PortalId] ASC,
	[TabId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table {databaseOwner}[DNNTokens_Token]    Script Date: 5.2.2025. 13:41:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE {databaseOwner}[DNNTokens_Token](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[Name] [nvarchar](250) NOT NULL,
	[TokenValue] [nvarchar](max) NOT NULL,
	[TokenType] [int] NOT NULL,
	[Scope] [int] NOT NULL,
	[UserId] [int] NULL,
	[DateCreated] [datetime] NOT NULL,
	[CategoryId] [int] NULL,
 CONSTRAINT [PK_DNNTokens_TokenDefinition] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE {databaseOwner}[DNNTokens_GeneralPortalSettings]  WITH CHECK ADD  CONSTRAINT [FK_DNNTokens_GeneralPortalSettings_Portals] FOREIGN KEY([PortalId])
REFERENCES {databaseOwner}[Portals] ([PortalID])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[DNNTokens_GeneralPortalSettings] CHECK CONSTRAINT [FK_DNNTokens_GeneralPortalSettings_Portals]
GO
ALTER TABLE {databaseOwner}[DNNTokens_PortalTabs]  WITH CHECK ADD  CONSTRAINT [FK_DNNTokens_PortalTabs_Tabs] FOREIGN KEY([TabId])
REFERENCES {databaseOwner}[Tabs] ([TabID])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[DNNTokens_PortalTabs] CHECK CONSTRAINT [FK_DNNTokens_PortalTabs_Tabs]
GO
ALTER TABLE {databaseOwner}[DNNTokens_Token]  WITH CHECK ADD  CONSTRAINT [FK_DNNTokens_Token_DNNTokens_Category] FOREIGN KEY([CategoryId])
REFERENCES {databaseOwner}[DNNTokens_Category] ([Id])
ON DELETE SET NULL
GO
ALTER TABLE {databaseOwner}[DNNTokens_Token] CHECK CONSTRAINT [FK_DNNTokens_Token_DNNTokens_Category]
GO
ALTER TABLE {databaseOwner}[DNNTokens_Token]  WITH CHECK ADD  CONSTRAINT [FK_DNNTokens_Token_Users] FOREIGN KEY([UserId])
REFERENCES {databaseOwner}[Users] ([UserID])
ON DELETE SET NULL
GO
ALTER TABLE {databaseOwner}[DNNTokens_Token] CHECK CONSTRAINT [FK_DNNTokens_Token_Users]
GO
