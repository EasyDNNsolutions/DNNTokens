<?xml version="1.0" encoding="utf-8"?>
<root>
	<!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="btnCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
	<data name="lbAddToken.Text" xml:space="preserve">
    <value>Add token</value>
  </data>
	<data name="lblTokenValue.Help" xml:space="preserve">
    <value>Enter a token description</value>
  </data>
	<data name="lblTokenValue.Text" xml:space="preserve">
    <value>Token value</value>
  </data>
	<data name="lblName.Help" xml:space="preserve">
    <value>Enter the token name</value>
  </data>
	<data name="lblName.Text" xml:space="preserve">
    <value>Token name</value>
  </data>
	<data name="BasicSettings.Text" xml:space="preserve">
    <value>DNNTokens Module Settings</value>
  </data>
	<data name="AddToken.Text" xml:space="preserve">
    <value>Add token</value>
  </data>
	<data name="TokenList.Text" xml:space="preserve">
    <value>Token list</value>
  </data>
	<data name="TokenName.Required" xml:space="preserve">
    <value>Enter token name.</value>
  </data>
	<data name="TokenDecription.Required" xml:space="preserve">
    <value>Enter token value.</value>
  </data>
	<data name="TokenAdded.Text" xml:space="preserve">
    <value>Token added</value>
  </data>
	<data name="navAdEditCategory.Text" xml:space="preserve">
		<value>Add/Edit Category</value>
	</data>
	<data name="lblCategoryName.Text" xml:space="preserve">
		<value>Category name</value>
	</data>
	<data name="lblCategoryName.Help" xml:space="preserve">
		<value>Enter category name.</value>
	</data>
	<data name="CategoryName.Required" xml:space="preserve">
		<value>Enter category name.</value>
	</data>
	<data name="lblCategoryDescription.Text" xml:space="preserve">
		<value>Category description</value>
	</data>
	<data name="lblCategoryDescription.Help" xml:space="preserve">
		<value>Enter category description.</value>
	</data>
	<data name="CategoryDecription.Required" xml:space="preserve">
		<value>Enter category description.</value>
	</data>
	<data name="btnAddCategory.Text" xml:space="preserve">
		<value>Add category</value>
	</data>
	<data name="CategoryAdded.Text" xml:space="preserve">
		<value>Category added</value>
	</data>
	<data name="btnCloseSettings.Text" xml:space="preserve">
		<value>Close settings</value>
	</data>
	<data name="lbCategoryUpdate.Text" xml:space="preserve">
		<value>Update</value>
	</data>
	<data name="lbCategoryCancel.Text" xml:space="preserve">
		<value>Cancel</value>
	</data>
	<data name="ScopeSelect.Text" xml:space="preserve">
		<value>Token scope</value>
	</data>
	<data name="ScopeSelect.Help" xml:space="preserve">
		<value>Select token scope</value>
	</data>
	<data name="liPortal.Text" xml:space="preserve">
		<value>Portal</value>
	</data>
	<data name="liHost.Text" xml:space="preserve">
		<value>Host</value>
	</data>
	<data name="btnUpdateToken.Text" xml:space="preserve">
		<value>Update</value>
	</data>
	<data name="btnCancelUpdateToken.Text" xml:space="preserve">
		<value>Cancel</value>
	</data>
	<data name="TokenEditCanceled.Text" xml:space="preserve">
		<value>Editing canceled.</value>
	</data>
	<data name="TokenUpdated.Text" xml:space="preserve">
		<value>Token updated.</value>
	</data>
	<data name="RenderDNNTokens.Text" xml:space="preserve">
		<value>Render DNN tokens</value>
	</data>
	<data name="RenderDNNTokens.Help" xml:space="preserve">
		<value>Render official DNN CMS tokens.</value>
	</data>
	<data name="btnSaveGeneralPortalSettings.Text" xml:space="preserve">
		<value>Save</value>
	</data>
	<data name="ReplaceOnAllTabs.Text" xml:space="preserve">
		<value>Replace tokens on all tabs</value>
	</data>
	<data name="ReplaceOnAllTabs.Help" xml:space="preserve">
		<value>Replace tokens on all tabs</value>
	</data>
	<data name="GeneralPortalSettingsSaved.Text" xml:space="preserve">
		<value>General Portal Settings saved.</value>
	</data>
	<data name="lblCategorySelect.Text" xml:space="preserve">
		<value>Select category</value>
	</data>
	<data name="lblCategorySelect.Help" xml:space="preserve">
		<value>Select category for the tokrn</value>
	</data>
	<data name="NoTabsSelected.Text" xml:space="preserve">
		<value>No tabs selected.</value>
	</data>
	<data name="lblTokenTypeSelect.Text" xml:space="preserve">
		<value>Select token type</value>
	</data>
	<data name="lblTokenTypeSelect.Help" xml:space="preserve">
		<value>Select token type.</value>
	</data>
	<data name="liTextHtml.Text" xml:space="preserve">
		<value>Text/Html</value>
	</data>
	<data name="liRazor.Text" xml:space="preserve">
		<value>Razor script</value>
	</data>
	<data name="lblTokenTestResults.Text" xml:space="preserve">
		<value>Test token output</value>
	</data>
	<data name="lblTokenTestResults.Help" xml:space="preserve">
		<value>Test token to see output.</value>
	</data>
	<data name="btnTestToken.Text" xml:space="preserve">
		<value>Test token</value>
	</data>
	<data name="liSQLScript.Text" xml:space="preserve">
		<value>SQL script</value>
	</data>
	<data name="Categories.Text" xml:space="preserve">
		<value>Categories</value>
	</data>
	<data name="Settings.Text" xml:space="preserve">
		<value>Settings</value>
	</data>
	<data name="Close.Text" xml:space="preserve">
		<value>Close</value>
	</data>
	<data name="lblTabsList.Text" xml:space="preserve">
		<value>Select tabs:</value>
	</data>
	<data name="lblTabsList.Help" xml:space="preserve">
		<value>Select tabs where DDNNTokens will work.</value>
	</data>
	<data name="AddCategory.Text" xml:space="preserve">
		<value>Add Category</value>
	</data>
	<data name="CategoryList.Text" xml:space="preserve">
		<value>Category list</value>
	</data>
	<data name="GeneralPortalSettings.Text" xml:space="preserve">
		<value>General Portal Settings</value>
	</data>
	<data name="InvalidSQLquery.Text" xml:space="preserve">
		<value>Invalid SQL query.</value>
	</data>
	<data name="NoTokensAdded.Text" xml:space="preserve">
		<value>No tokens added. Please add a token.</value>
	</data>
	<data name="ClearCache.Text" xml:space="preserve">
		<value>Clear cache</value>
	</data>
</root>